Given a problem that can be solved in polynomial time, an exhaustive algorithm will, eventually, solve the problem. However, due to their nature of testing every possiblity, they do not tend to be very efficient or optimized. In this project, exhaustive algorithms were implemented for knapsack and graph coloring problems. There was also an imposed time limit of 10 minutes for the algorithm to solve the problem -- causing there to  be unoptimized best solutions found for the more complicated problems. This proved to be even more true for graph coloring than knapsack. Overall, while effective, exhaustive algorithms are too ineffecient to produce optimal results in a desirably short amount of time.
